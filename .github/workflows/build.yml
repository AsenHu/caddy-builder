name: build

permissions:
  contents: write

on:
  push:
  schedule:
    - cron: "25 23 * * *"
  workflow_dispatch:

jobs:
  check-update:
    runs-on: ubuntu-latest
    steps:
      - name: check update
        id: check
        run: |
          latest_CADDY_VERSION=$(curl https://api.github.com/repos/caddyserver/caddy/releases/latest -L -q --retry 5 --retry-delay 10 --retry-max-time 60 | jq -r ".tag_name")
          local_CADDY_VERSION=$(curl https://github.com/AsenHu/caddy-builder/releases/download/cfdnstls/version.txt -L -q --retry 5 --retry-delay 10 --retry-max-time 60 | sed -n '2p')
          if [ "$latest_CADDY_VERSION" == "$local_CADDY_VERSION" ]
          then
            echo "caddy is already the latest version $latest_CADDY_VERSION"
            echo "build_needed=false" >> $GITHUB_OUTPUT
          else
            echo "caddy is not the latest version, start building"
            echo "build_needed=true" >> $GITHUB_OUTPUT
          fi

  build:
    strategy:
      matrix:
        goamd:
          - v1
          - v2
          - v3
          - v4
    env:
      GOOS: linux
      GOARCH: amd64
      GOAMD64: ${{ matrix.goamd }}
      CGO_ENABLED: 0
    runs-on: ubuntu-latest
    needs: check-update
    if: ${{ needs.check-update.outputs.build_needed }} == "true"
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
      - name: build
        run : |
          curl https://raw.githubusercontent.com/AsenHu/caddy-builder/master/cfAPI.go -o main.go -L -q --retry 5 --retry-delay 10 --retry-max-time 60
          go mod init caddy
          go mod tidy -e
          go build -o "caddy-$GOOS-$GOARCH-${{ matrix.goamd }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "caddy-${{ env.GOOS }}-${{ env.GOARCH }}-${{ env.GOAMD64 }}"
          path: "caddy-${{ env.GOOS }}-${{ env.GOARCH }}-${{ env.GOAMD64 }}"

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download singbox
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - run: |
          chmod +x caddy-*
          caddyver=$(./caddy-linux-amd64-v1 version | cut -d ' ' -f 1)
          echo "caddyver=$caddyver" >> $GITHUB_ENV
          {
            date
            echo "$caddyver"
            date +%s
          } > version.txt
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            mods:
            github.com/caddy-dns/cloudflare
          draft: false
          prerelease: false
          files: |
            caddy-*
            version.txt
          name: ${{ env.caddyver }}
          tag_name: cfdnstls